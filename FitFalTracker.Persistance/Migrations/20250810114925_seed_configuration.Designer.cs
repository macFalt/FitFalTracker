// <auto-generated />
using FitFalTracker.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitFalTracker.Persistance.Migrations
{
    [DbContext(typeof(FitFalDbContext))]
    [Migration("20250810114925_seed_configuration")]
    partial class seed_configuration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitFalTracker.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 18,
                            Height = 182f,
                            Weight = 1.2f
                        });
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.AppUser", b =>
                {
                    b.OwnsOne("FitFalTracker.Domain.ValueObjects.PersonName", "UserName", b1 =>
                        {
                            b1.Property<int>("AppUserId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LastName");

                            b1.HasKey("AppUserId");

                            b1.ToTable("AppUsers");

                            b1.WithOwner()
                                .HasForeignKey("AppUserId");

                            b1.HasData(
                                new
                                {
                                    AppUserId = 1,
                                    FirstName = "Michael",
                                    LastName = "Patrick"
                                });
                        });

                    b.Navigation("UserName")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
