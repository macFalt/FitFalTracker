// <auto-generated />
using System;
using FitFalTracker.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitFalTracker.Persistance.Migrations
{
    [DbContext(typeof(FitFalDbContext))]
    [Migration("20250817112653_updateDB_17.08")]
    partial class updateDB_1708
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitFalTracker.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.BodyWeightEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("BodyWeightEntry");
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseDefinitionId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseDefinitionId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.ExerciseDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MuscleGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExerciseDefinitions");
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.ExerciseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int?>("Rir")
                        .HasColumnType("int");

                    b.Property<int?>("Rpe")
                        .HasColumnType("int");

                    b.Property<int>("SetNumber")
                        .HasColumnType("int");

                    b.Property<string>("Tempo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseDetails");
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.AppUser", b =>
                {
                    b.OwnsOne("FitFalTracker.Domain.ValueObjects.PersonName", "FullName", b1 =>
                        {
                            b1.Property<int>("AppUserId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LastName");

                            b1.HasKey("AppUserId");

                            b1.ToTable("AppUsers");

                            b1.WithOwner()
                                .HasForeignKey("AppUserId");
                        });

                    b.Navigation("FullName")
                        .IsRequired();
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.BodyWeightEntry", b =>
                {
                    b.HasOne("FitFalTracker.Domain.Entities.AppUser", "AppUser")
                        .WithMany("BodyWeightEntrys")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FitFalTracker.Domain.ValueObjects.Weight", "Weight", b1 =>
                        {
                            b1.Property<int>("BodyWeightEntryId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Weight");

                            b1.Property<string>("WeightEnum")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("WeightEnum");

                            b1.HasKey("BodyWeightEntryId");

                            b1.ToTable("BodyWeightEntry");

                            b1.WithOwner()
                                .HasForeignKey("BodyWeightEntryId");
                        });

                    b.Navigation("AppUser");

                    b.Navigation("Weight")
                        .IsRequired();
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.Exercise", b =>
                {
                    b.HasOne("FitFalTracker.Domain.Entities.ExerciseDefinition", "ExerciseDefinition")
                        .WithMany("Exercises")
                        .HasForeignKey("ExerciseDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitFalTracker.Domain.Entities.Workout", "Workout")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseDefinition");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.ExerciseDetail", b =>
                {
                    b.HasOne("FitFalTracker.Domain.Entities.Exercise", "Exercise")
                        .WithMany("ExerciseDetails")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FitFalTracker.Domain.ValueObjects.Weight", "Weight", b1 =>
                        {
                            b1.Property<int>("ExerciseDetailId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Weight");

                            b1.Property<int>("WeightEnum")
                                .HasColumnType("int")
                                .HasColumnName("WeightEnum");

                            b1.HasKey("ExerciseDetailId");

                            b1.ToTable("ExerciseDetails");

                            b1.WithOwner()
                                .HasForeignKey("ExerciseDetailId");
                        });

                    b.Navigation("Exercise");

                    b.Navigation("Weight")
                        .IsRequired();
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("BodyWeightEntrys");
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.Exercise", b =>
                {
                    b.Navigation("ExerciseDetails");
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.ExerciseDefinition", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("FitFalTracker.Domain.Entities.Workout", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
